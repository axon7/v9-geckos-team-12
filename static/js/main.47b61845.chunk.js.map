{"version":3,"sources":["components/UI/NavigationTop/NavigationTop.js","components/UI/NavigationBottom/NavigationBottom.js","containers/Layout/Layout.js","components/Cart/Cart.js","components/ClothesList/Card/Card.js","components/ClothesList/ClothesList.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","root","flexGrow","NavigationTop","classes","react_default","a","createElement","className","AppBar","position","Toolbar","Box","p","Typography","variant","color","style","borderRight","paddingRight","appBar","top","bottom","NavigationBottom","alignSelf","Layout","react","UI_NavigationTop_NavigationTop","this","props","children","UI_NavigationBottom_NavigationBottom","Component","Cart","card","maxWidth","media","height","CardComponent","_ref","Object","esm_extends","Card","CardActionArea","CardMedia","image","img","CardContent","gutterBottom","component","name","price","CardActions","Button","size","config","headers","X-RapidAPI-Key","ClothesList","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","items","_this2","axios","get","then","res","setState","data","products","console","log","Grid","container","map","item","baseImageUrl","current","text","App","Fragment","containers_Layout_Layout","react_router","path","React","Boolean","window","location","hostname","match","app","react_router_dom","src_App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2OAKMA,EAAYC,YAAW,CAC3BC,KAAM,CACJC,SAAU,KAkCCC,EA9BO,WAClB,IAAMC,EAAUL,IAElB,OACEM,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,EAAQH,MAEtBI,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQC,SAAS,UACfL,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACAN,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAKC,EAAG,GACNR,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAYC,QAAQ,SAASC,MAAM,UAAYC,MAAO,CAAEC,YAAa,eAAgBC,aAAc,SAAnG,WAIAd,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAKC,EAAG,GACRR,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAYC,QAAQ,SAASC,MAAM,UAAUC,MAAO,CAAEC,YAAa,eAAgBC,aAAc,SAAjG,UAIAd,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAKC,EAAG,GACRR,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAYC,QAAQ,SAASC,MAAM,WAAnC,cCxBJjB,EAAYC,YAAW,CACzBC,KAAM,CACJC,SAAU,GAEZkB,OAAQ,CACJC,IAAK,OACLC,OAAQ,KAiCDC,EA7BU,WAErB,IAAMnB,EAAUL,IAEhB,OACIM,EAAAC,EAAAC,cAAA,WACKF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQC,SAAS,QAAQM,MAAM,UAAUR,UAAWJ,EAAQgB,QACxDf,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAASM,MAAO,CAACO,UAAW,WACzBnB,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAKC,EAAG,GACJR,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAYC,QAAQ,SAASC,MAAM,UAAYC,MAAO,CAAEC,YAAa,eAAgBC,aAAc,SAAnG,gBAIAd,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAKC,EAAG,GACRR,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAYC,QAAQ,SAASC,MAAM,UAAUC,MAAO,CAAEC,YAAa,eAAgBC,aAAc,SAAjG,uBAIAd,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAKC,EAAG,GACRR,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAYC,QAAQ,SAASC,MAAM,WAAnC,gBCnBTS,mLAVX,OACEpB,EAAAC,EAAAC,cAACmB,EAAA,SAAD,KACErB,EAAAC,EAAAC,cAACoB,EAAD,MACCC,KAAKC,MAAMC,SACZzB,EAAAC,EAAAC,cAACwB,EAAD,cANaC,qBCMNC,EARF,WACX,OACE5B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,oICKAR,EAAYC,YAAW,CAC3BkC,KAAM,CACJC,SAAU,KAEZC,MAAO,CACLC,OAAQ,OAIG,SAASC,EAATC,GAAqC,IAATV,EAASW,OAAAC,EAAA,EAAAD,CAAA,GAAAD,GAC5CnC,EAAUL,IAEhB,OACEM,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAMlC,UAAWJ,EAAQ8B,MACvB7B,EAAAC,EAAAC,cAACoC,EAAA,EAAD,KACEtC,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAWpC,UAAWJ,EAAQgC,MAAOS,MAAOhB,EAAMiB,MAClDzC,EAAAC,EAAAC,cAACwC,EAAA,EAAD,KACE1C,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAYkC,cAAY,EAACjC,QAAQ,KAAKkC,UAAU,MAC7CpB,EAAMqB,MAET7C,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgBiC,UAAU,KAA5D,UACUpB,EAAMsB,SAIpB9C,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,KACE/C,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CAAQC,KAAK,QAAQtC,MAAM,WAA3B,gCC9BFuC,EAAS,CACbC,QAAS,CACPC,iBAAkB,uDAIDC,cACnB,SAAAA,EAAY7B,GAAO,IAAA8B,EAAA,OAAAnB,OAAAoB,EAAA,EAAApB,CAAAZ,KAAA8B,IACjBC,EAAAnB,OAAAqB,EAAA,EAAArB,CAAAZ,KAAAY,OAAAsB,EAAA,EAAAtB,CAAAkB,GAAAK,KAAAnC,KAAMC,KACDmC,MAAQ,CACXC,MAAO,IAHQN,mFAOC,IAAAO,EAAAtC,KAClBuC,IACGC,IACC,uHACAb,GAEDc,KAAK,SAAAC,GAAG,OAAIJ,EAAKK,SAAS,CAAEN,MAAOK,EAAIE,KAAKC,8CAG/C,IAAMR,EAAQrC,KAAKoC,MAAMC,MAEzB,OADAS,QAAQC,IAAIV,GAEV5D,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAAMC,WAAS,GACZjD,KAAKoC,MAAMC,MAAMa,IAAI,SAAAC,GACpB,OACE1E,EAAAC,EAAAC,cAAC+B,EAAD,CACEY,KAAM6B,EAAK7B,KACXJ,IAAKiC,EAAKC,aACV7B,MAAO4B,EAAK5B,MAAM8B,QAAQC,kBA3BDlD,aCS1BmD,mLAbX,OACE9E,EAAAC,EAAAC,cAACF,EAAAC,EAAM8E,SAAP,KACE/E,EAAAC,EAAAC,cAAC8E,EAAD,KACEhF,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,KACEjF,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,CAAOrC,UAAWS,EAAa6B,KAAK,wDACpClF,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,CAAOrC,UAAWhB,EAAMsD,KAAK,oBAPvBC,IAAMxD,WCMJyD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXN,IAAMC,EACJzF,EAAAC,EAAAC,cAACwF,EAAA,EAAD,KACE1F,EAAAC,EAAAC,cAACyF,EAAD,OAIJC,IAASC,OAAOJ,EAAKK,SAASC,eAAe,SDoHvC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMlC,KAAK,SAAAmC,GACjCA,EAAaC","file":"static/js/main.47b61845.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Box from '@material-ui/core/Box';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { AppBar, Toolbar, Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1\r\n  }\r\n});\r\n\r\nconst NavigationTop = () => {\r\n    const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      \r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n        <Box p={2}>\r\n          <Typography variant=\"button\" color=\"inherit\"   style={{ borderRight: '0.1em solid ', paddingRight: '33px' }}>\r\n            Shirts \r\n          </Typography>\r\n          </Box>\r\n          <Box p={2}>\r\n          <Typography variant=\"button\" color=\"inherit\" style={{ borderRight: '0.1em solid ', paddingRight: '33px' }}>\r\n            Jeans \r\n          </Typography>\r\n          </Box>\r\n          <Box p={2}>\r\n          <Typography variant=\"button\" color=\"inherit\">\r\n            Shoes\r\n          </Typography>\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBar>\r\n    \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavigationTop\r\n","import React from 'react'\r\nimport Box from '@material-ui/core/Box';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { AppBar, Toolbar, Typography } from \"@material-ui/core\";\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      flexGrow: 1\r\n    },\r\n    appBar: {\r\n        top: 'auto',\r\n        bottom: 0,\r\n      },\r\n  });\r\n\r\nconst NavigationBottom = () => {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n             <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\r\n                 <Toolbar style={{alignSelf: 'center'}}>\r\n                    <Box p={2}>\r\n                        <Typography variant=\"button\" color=\"inherit\"   style={{ borderRight: '0.1em solid ', paddingRight: '33px' }}>\r\n                            Our Catalog \r\n                        </Typography>\r\n                        </Box>\r\n                        <Box p={2}>\r\n                        <Typography variant=\"button\" color=\"inherit\" style={{ borderRight: '0.1em solid ', paddingRight: '33px' }}>\r\n                              Terms & Conditions \r\n                        </Typography>\r\n                        </Box>\r\n                        <Box p={2}>\r\n                        <Typography variant=\"button\" color=\"inherit\">\r\n                             Privacy\r\n                        </Typography>\r\n                        </Box>\r\n                    </Toolbar>\r\n             </AppBar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavigationBottom\r\n","import React, { Component, Fragment } from \"react\";\r\nimport NavigationTop from \"../../components/UI/NavigationTop/NavigationTop\";\r\nimport NavigationBottom from \"../../components/UI/NavigationBottom/NavigationBottom\";\r\n\r\nclass Layout extends Component {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <NavigationTop />\r\n        {this.props.children}\r\n        <NavigationBottom />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Layout;\r\n","import React from \"react\";\r\n\r\nconst Cart = () => {\r\n  return (\r\n    <div>\r\n      <h1>No items in your cart. Please add some</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    maxWidth: 345\r\n  },\r\n  media: {\r\n    height: 314\r\n  }\r\n});\r\n\r\nexport default function CardComponent({ ...props }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardActionArea>\r\n        <CardMedia className={classes.media} image={props.img} />\r\n        <CardContent>\r\n          <Typography gutterBottom variant='h5' component='h2'>\r\n            {props.name}\r\n          </Typography>\r\n          <Typography variant='body2' color='textSecondary' component='p'>\r\n            Price: {props.price}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <Button size='small' color='primary'>\r\n          ADD TO BASKET\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport Card from \"../ClothesList/Card/Card\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst config = {\r\n  headers: {\r\n    \"X-RapidAPI-Key\": \"07ea04e210mshdcdcdfaeb0a8a2fp1b7079jsnb16592877577\"\r\n  }\r\n};\r\n\r\nexport default class ClothesList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      items: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\r\n        \"https://brianiswu-unofficial-asos-com-v1.p.rapidapi.com/product/search/v1/?q=t-shirt&lang=en-GB&currency=EUR&store=1\",\r\n        config\r\n      )\r\n      .then(res => this.setState({ items: res.data.products }));\r\n  }\r\n  render() {\r\n    const items = this.state.items;\r\n    console.log(items);\r\n    return (\r\n      <div>\r\n        <Grid container>\r\n          {this.state.items.map(item => {\r\n            return (\r\n              <Card\r\n                name={item.name}\r\n                img={item.baseImageUrl}\r\n                price={item.price.current.text}\r\n              />\r\n            );\r\n          })}\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import Layout from \"./containers/Layout/Layout\";\r\nimport React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Cart from \"./components/Cart/Cart\";\r\nimport ClothesList from \"./components/ClothesList/ClothesList\";\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Layout>\r\n          <Switch>\r\n            <Route component={ClothesList} path='https://chingu-voyages.github.io/v9-geckos-team-12/'  />\r\n            <Route component={Cart} path='/cart' />\r\n          </Switch>\r\n        </Layout>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nconst app = (\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>\r\n);\r\n\r\nReactDOM.render(app, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}